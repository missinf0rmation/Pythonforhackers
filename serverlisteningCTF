# Setup server listening on ('localhost', 10000)
# receive data then send data back after XORing with the key
# attackthehumans
#
# If you get an address already in use error then try again in a few
# moments.
#
import socket

# Define the server host and port
server_host = 'localhost'
server_port = 10000

# Define the XOR key
xor_key = 'attackthehumans'

# Function to XOR data with the key
def xor_data(data):
    return ''.join(chr(ord(data_char) ^ ord(key_char)) for data_char, key_char in zip(data, xor_key))

# Create a socket to listen on
with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as server_socket:
    # Bind the socket to the host and port
    server_socket.bind((server_host, server_port))

    # Listen for incoming connections
    server_socket.listen()

    print(f"Server is listening on {server_host}:{server_port}")

    # Accept a connection from a client
    client_socket, client_address = server_socket.accept()
    print(f"Accepted connection from {client_address}")

    with client_socket:
        while True:
            # Receive data from the client
            data = client_socket.recv(1024)
            
            # If no data is received, break the loop
            if not data:
                break

            # XOR the received data with the key
            xor_result = xor_data(data.decode('utf-8'))

            # Send the XORed data back to the client
            client_socket.sendall(xor_result.encode('utf-8'))

    print(f"Connection with {client_address} closed")

# One of the agents has intercepted a file from the aliens
# The flag is hidden in a large amount of non-alphanumeric characters.
# The file lives at /tmp/destroymoonbase.gif
#
file_path = "/tmp/destroymoonbase.gif"

try:
    with open(file_path, "r") as file:
        # Read the file contents
        file_contents = file.read()
        
    import re
    alphanumeric_text = re.sub(r'[^a-zA-Z0-9]', '', file_contents)
    
    print("Alphanumeric text from the file:")
    print(alphanumeric_text)
    
except FileNotFoundError:
    print(f"File not found at '{file_path}'")
except Exception as e:
    print(f"Error: {e}")
